# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

    config.vm.box = "ubuntu/focal64" # 20.04.5 LTS

    config.vm.provider "virtualbox" do |vb|
        #
        # Unless you're running loads of containers, this should be plenty of RAM.
        # We also have swapspace on the VM.
        #
        vb.memory = "1024"
        vb.cpus = "4"
        #
        # If the VM becomes more than 1 second out of sync, the clock gets resynced.
        #
        vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]
    end

    config.vm.provision "shell" do |s|
        s.path = "bin/vagrant-provision.sh"
        #
        # Grab our environment variables and pass them into the provisioning script as parameters.
        #
        # This convoluted logic is to handle cases like SKIP_APT= *and* SKIP_APT=1
        # If any Ruby experts know a better way to write this logic, please let me know!
        #
        skip_apt = ENV["SKIP_APT"]
        if !skip_apt or skip_apt == ""
            skip_apt=0
        end

        skip_docker = ENV["SKIP_DOCKER"]
        if !skip_docker or skip_docker == ""
            skip_docker=0
        end

        skip_docker_cache = ENV["SKIP_DOCKER_CACHE"]
        if !skip_docker_cache or skip_docker_cache == ""
            skip_docker_cache=0
        end

        skip_ssh = ENV["SKIP_SSH"]
        if !skip_ssh or skip_ssh == ""
            skip_ssh=0
        end

        skip_time = ENV["SKIP_TIME"]
        if !skip_time or skip_time == ""
            skip_time=0
        end

        s.args = "#{skip_apt} #{skip_docker} #{skip_docker_cache} #{skip_ssh} #{skip_time} "

    end

    #
    # Forward our ports.  Feel free to add more as needed.
    #
    config.vm.network "forwarded_port", guest: 3000, host: 3000, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 3100, host: 3100, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 5000, host: 5000, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 8000, host: 8000, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 8080, host: 8080, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 9081, host: 9081, host_ip: "127.0.0.1"

    #
    # This is reserved for our time server.
    # Yes, that's a 404 joke.
    #
    config.vm.network "forwarded_port", guest: 1404, host: 1404, host_ip: "127.0.0.1"

    #
    # Mount our current directory in /vagrant (default)
    #
    config.vm.synced_folder ".", "/vagrant"

    #
    # Mount any additional directories.
    # My personal recommendation is not to share your entire home directory, but
    # instead create a directory such as "development/" and share that directory instead.
    #
    # NOTE: Paths inside Vagrant MUST be identical to what they are on the host's filesystem.
    # Otherwise, trying to mount volumes with Docker's -v switch will not work correctly.
    #
    #config.vm.synced_folder "#{ENV['HOME']}", "#{ENV['HOME']}"
    config.vm.synced_folder "#{ENV['HOME']}/development", "#{ENV['HOME']}/development"

    #
    # Used for caching .deb packages so that if I keep destroying and building VMs
    # I won't keep downloading the same packages over and over.
    #
    config.vm.synced_folder "vagrant-apt-cache", "/var/cache/apt/archives"

end


